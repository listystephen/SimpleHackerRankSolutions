Find Digits
-----------

Problem 
--------
Given an integer, N, traverse its digits (d1,d2,...,dn) and determine how many digits evenly divide  (i.e.: count the 
number of times N divided by each digit di has a remainder of 0). Print the number of evenly divisible digits.

Note: Each digit is considered to be unique, so each occurrence of the same evenly divisible digit should be counted 
(i.e.: for N=111, the answer is 3).

Input Format

The first line is an integer,T , indicating the number of test cases. 
The T subsequent lines each contain an integer,N .





#!/bin/python

import sys

def findDigits(n):
    count = 0
    temp = n
    while temp!=0:
        rem = temp%10
        temp = temp//10
        try:
            if n%rem == 0:
                count+=1
        except ZeroDivisionError:
            rem = 0
        
    return count
        
    # Complete this function

if __name__ == "__main__":
    t = int(raw_input().strip())
    for a0 in xrange(t):
        n = int(raw_input().strip())
        result = findDigits(n)
        print result

