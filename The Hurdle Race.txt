Problem
--------

Dan is playing a video game in which his character competes in a hurdle race by jumping over n hurdles 
with heights h0, h1,...hn-1.
 He can initially jump a maximum height of k units, but he has an unlimited supply of magic beverages that help him 
jump higher! Dan can drink any number magic beverages and the maximum height he can jump during the entire race 
increases by the number of magic beverages he drink.

Given n, k, and the heights of all the hurdles, find and print the minimum number of magic beverages Dan must drink to 
complete the race.

Input Format

The first line contains two space-separated integers describing the respective values of n (the number of hurdles)
 and k (the maximum height he can jump without consuming any beverages). 
The second line contains n space-separated integers describing the respective values of h0, h1,...hn-1..







#!/bin/python

import sys


def hurdleRace(k, height):
    return max(max(height)-k,0)
        
    # Complete this function

if __name__ == "__main__":
    n, k = raw_input().strip().split(' ')
    n, k = [int(n), int(k)]
    height = map(int, raw_input().strip().split(' '))
    result = hurdleRace(k, height)
    print result
