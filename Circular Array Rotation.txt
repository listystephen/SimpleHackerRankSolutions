Circular Array Rotation
------------------------

Problem 
-------

John Watson performs an operation called a right circular rotation on an array of integers,[a0, a1,.....an-1] . After
 performing one right 
circular rotation operation, the array is transformed from [a0, a1,.....an-1] to [an-1, a0, a1,.....an-2].

Watson performs this operation k times. To test Sherlock's ability to identify the current element at a particular
 position in the rotated array, Watson asks q queries, where each query consists of a single integer,m , for which you must 
print the element at index m in the rotated array (i.e., the value of am).

Input Format

The first line contains  space-separated integers, , , and , respectively. 
The second line contains  space-separated integers, where each integer  describes array element  (where ). 
Each of the  subsequent lines contains a single integer denoting .



#!/bin/python

import sys

def circularArrayRotation(a, m, n, k):
    result = k%n
    c = []
    if result!=0:
            b = a[n-result: ] + a[:n-result]
    else:
            b = a
    for i in m:
        c.append(b[i])
    return c
           
    # Complete this function


    
if __name__ == "__main__":
    n, k, q = raw_input().strip().split(' ')
    n, k, q = [int(n), int(k), int(q)]
    a = map(int, raw_input().strip().split(' '))
    m = []
    m_i = 0
    for m_i in xrange(q):
        m_t = int(raw_input().strip())
        m.append(m_t)
#    print m
    result = circularArrayRotation(a, m, n, k)
    print "\n".join(map(str, result))


