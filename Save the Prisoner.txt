Save the Prisoner
-----------------



A jail has N prisoners, and each prisoner has a unique id number, S, ranging from 1 to N. There are M sweets that must be 
distributed to the prisoners.

The jailer decides the fairest way to do this is by sitting the prisoners down in a circle (ordered by ascending S), and 
then, starting with some random S , distribute one candy at a time to each sequentially numbered prisoner until all  candies
 are distributed. For example, if the jailer picks prisoner S=2, then his distribution order would be 
(2,3,....(n-1),n1,2,) until all M sweets are
 distributed.

But wait—there's a catch—the very last sweet is poisoned! Can you find and print the ID number of the last prisoner to 
receive a sweet so he can be warned?

Input Format

The first line contains an integer, T, denoting the number of test cases. 
The T subsequent lines each contain 3 space-separated integers: 
N (the number of prisoners), M (the number of sweets), and S (the prisoner ID), respectively.










#!/bin/python

import sys



def saveThePrisoner(n, m, s):
    Id =  ((s+m)-1)%n
    if Id!= 0:
        return Id
    else:
        return n



#from itertools import cycle
#    nl = []
#   index = 0
#   for i in range(1,n+1):
#        nl.append(i)
#   index = (m+s)%n - 1
#    return index
#    pool = [cycle(nl)]

    
    
    
t = int(raw_input().strip())
for a0 in xrange(t):
    n, m, s = raw_input().strip().split(' ')
    n, m, s = [int(n), int(m), int(s)]
    result = saveThePrisoner(n, m, s)
    print(result)

